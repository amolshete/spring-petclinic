# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: compile the code
        run: mvn compile
        
  security-check:
    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    
    # - name: Trivy Installation
    #   run: |
    #     sudo apt-get install -y wget apt-transport-https gnupg lsb-release
    #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    #     echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    #     sudo apt-get update -y
    #     sudo apt-get install -y trivy

    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .
      
  test:
    runs-on: self-hosted
    needs: security-check

    steps:
      - name: checkout the code
        uses: actions/checkout@v2
    
      - name: test with Maven
        run: mvn test
      
      
  build:

    runs-on: self-hosted
    needs: test

    steps:
      - name: checkout the code
        uses: actions/checkout@v2
    
      - name: Build with Maven Wrapper
        run: mvn clean install

      - name: check directory
        run: ls -l target
        
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/spring-petclinic-2.7.0-SNAPSHOT.jar  
        
      - uses: actions/checkout@v4
        with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
         fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
         pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    
